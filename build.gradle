import nu.studer.gradle.jooq.JooqEdition

plugins {
    id 'org.springframework.boot' version '3.0.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'nu.studer.jooq' version '8.0'
    id 'java'
}

group = 'com.example'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    jooqGenerator 'org.postgresql:postgresql'
}

jooq {
    // use jOOQ version defined in Spring Boot
    version = dependencyManagement.importedProperties['jooq.version']
    edition = JooqEdition.OSS

    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/demo'
                    user = 'postgres'
                    password = 'postgres'
                    properties {
                        property {
                            key = 'PAGE_SIZE'
                            value = 2048
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        inputSchema = 'public'
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        includes = '.*'
                        excludes = ''
                    }
                    target {
                        packageName = 'com.example.reactive.db'
//                        directory = 'src/main/java'
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
